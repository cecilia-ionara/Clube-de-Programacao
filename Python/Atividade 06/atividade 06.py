# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mSqYcYJ9NrY-jm2cfPGjSQJ_IdFREaGA

Cecília Ionara Pinheiro de Araújo

1.1
"""

class Hamburguer:
    def __init__(self, nome, preco):
        self.nome = nome
        self.preco = preco

    def mostrar_info(self):
        print(f"Hambúrguer: {self.nome}, Preço: R${self.preco:.2f}")


class Banco:
    def __init__(self, saldo=0):
        self.saldo = saldo

    def depositar(self, valor):
        self.saldo += valor
        print(f"Depósito de R${valor:.2f} realizado. Saldo atual: R${self.saldo:.2f}")

    def sacar(self, valor):
        if valor <= self.saldo:
            self.saldo -= valor
            print(f"Saque de R${valor:.2f} realizado. Saldo atual: R${self.saldo:.2f}")
        else:
            print("Saldo insuficiente.")

"""1.2"""

class Forca:
    def __init__(self, palavra):
        self.palavra = palavra.lower()
        self.palpite = ['_' for _ in self.palavra]
        self.tentativas = 6

    def jogar(self):
        while self.tentativas > 0 and '_' in self.palpite:
            print(' '.join(self.palpite))
            letra = input("Digite uma letra: ").lower()
            if letra in self.palavra:
                for i in range(len(self.palavra)):
                    if self.palavra[i] == letra:
                        self.palpite[i] = letra
            else:
                self.tentativas -= 1
                print(f"Letra errada. Tentativas restantes: {self.tentativas}")
        if '_' not in self.palpite:
            print("Parabéns! Você ganhou!")
        else:
            print(f"Você perdeu! A palavra era: {self.palavra}")


def menu_forca():
    while True:
        print("\n--- Jogo da Forca ---")
        print("1. Jogar")
        print("2. Sair")
        opcao = input("Escolha uma opção: ")
        if opcao == '1':
            jogo = Forca("banana")
            jogo.jogar()
        elif opcao == '2':
            break
        else:
            print("Opção inválida.")

"""1.3"""

class Cliente:
    def __init__(self, nome, tipo, cpf, cep):
        self.nome = nome
        self.tipo = tipo
        self.cpf = cpf
        self.cep = cep

    def get_nome(self):
        return self.nome

    def get_tipo(self):
        return self.tipo

    def get_cpf(self):
        return self.cpf

    def get_cep(self):
        return self.cep

"""1.4"""

class Banco:
    def __init__(self, cliente, saldo=0, limite_credito=1000):
        self.cliente = cliente
        self.saldo = saldo
        self.limite_credito = limite_credito

    def sacar(self, valor):
        if valor <= self.saldo:
            self.saldo -= valor
            print(f"Saque de R${valor:.2f} realizado.")
        else:
            print("Saldo insuficiente.")

    def depositar(self, valor):
        self.saldo += valor
        print(f"Depósito de R${valor:.2f} realizado.")

    def pagar_credito(self, valor):
        if valor <= self.limite_credito:
            self.limite_credito -= valor
            print(f"Pagamento no crédito de R${valor:.2f} realizado.")
        else:
            print("Limite de crédito insuficiente.")

    def investir(self, valor):
        if valor > self.saldo:
            print("Saldo insuficiente para investir.")
            return

        taxa = {
            "normal": 0.015,
            "pleno": 0.025,
            "lux": 0.035
        }.get(self.cliente.get_tipo(), 0)

        rendimento = valor * taxa
        self.saldo -= valor
        self.saldo += valor + rendimento
        print(f"Investimento de R${valor:.2f} com rendimento de R${rendimento:.2f}.")